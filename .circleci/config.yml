# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: php:7.2
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mysql:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "composer.json" }}--{{ checksum ".circleci/config.yml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: |
          EXPECTED_SIGNATURE=$(curl -L https://composer.github.io/installer.sig)
          php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
          ACTUAL_SIGNATURE=$(php -r "echo hash_file('SHA384', 'composer-setup.php');")

          if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ]
          then
              >&2 echo 'ERROR: Invalid installer signature'
              rm composer-setup.php
              exit 1
          fi

          php composer-setup.php --quiet --install-dir /usr/local/bin --filename composer

      - run: composer install -n --prefer-dist

      - run: |
          [ -f /usr/local/lib/php/extensions/no-debug-non-zts-20170718/xdebug.so ] || pecl install xdebug
          echo 'zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20170718/xdebug.so' > /usr/local/etc/php/conf.d/xdebug.ini

      - save_cache:
          paths:
            - ./vendor
            - /usr/local/lib/php/extensions/no-debug-non-zts-20170718
            - /usr/local/etc/php/conf.d/xdebug.ini

          key: v1-dependencies-{{ checksum "composer.json" }}--{{ checksum ".circleci/config.yml" }}
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
        
      # run tests!
      - run: |
          mkdir -p test-results
          ./cc-test-reporter before-build
          vendor/bin/phpunit

      - store_test_results:
          path: test-results

      - run: |
          apt-get update -y && apt-get install git -y
          vendor/bin/php-coveralls -o build.json -x test-results/clover.xml
           ./cc-test-reporter after-build --coverage-input-type clover --exit-code $? test-results/clover.xml

